use mavenmovies;

-- Assignment 2 of the SQL

-- Question 1: 

-- Retrieve the total number of rentals made in the Sakila database. 
select count(rental_id)  total_rentals from rental;

-- Question 2: 
-- Find the average rental duration (in days) of movies rented from the Sakila database.
select avg(rental_duration) as days from film;

-- Sring function --
-- Question 3: 
-- Display the first name and last name of customers in uppercase.  
select upper(first_name),upper(last_name) from customer;

-- question 04:
#Extract the month from the rental date and display it alongside the rental ID. 
select rental_id , monthname(rental_date) from rental;

-- Retrieve the count of rentals for each customer (display customer ID and the count of rentals). 

select customer_id, count(rental_id) as rental_count from rental group by customer_id;

Question 6: 
-- Find the total revenue generated by each store. 

                
select * from store;  -- connect store table to staff table on behalf of store_id.
select * from staff;
select * from payment;                   -- connect payment to staff on behalf of the staff_id.


SELECT 
    store.store_id, SUM(payment.amount) AS toal_revenue
FROM
    store
        INNER JOIN
    staff ON store.store_id = staff.store_id
        INNER JOIN
    payment ON payment.staff_id = staff.staff_id
GROUP BY store.store_id;

#joins
#Display the title of the movie, customer s first name, and last name who rented it. 
 
select * from film;                       -- join inventory with film_id
select * from inventory;                  -- join rental with inventory_id 
select * from rental;                     -- join customer with customer_id
select *from customer ;

SELECT 
    film.title, concat(customer.first_name," ",customer.last_name) as Name
FROM
    film
        JOIN
    inventory ON film.film_id = inventory.film_id
        JOIN
    rental ON rental.inventory_id = inventory.inventory_id
        JOIN
    customer ON customer.customer_id = rental.customer_id;


#Question 8: 
#Retrieve the names of all actors who have appeared in the film "Gone with the Wind." 

select * from actor;                          -- join film_actor with actor_id 
select * from film_actor;                     -- join film with film_id
select  * from film;
SELECT 
    actor.first_name, actor.last_name
FROM
    actor
        JOIN
    film_actor ON actor.actor_id = film_actor.actor_id
        JOIN
    film ON film_actor.film_id = film.film_id
WHERE
    film.title = 'Gone with the wind';                -- there is no film presented in the database with this title

#groupby
#Question 1: 
#Determine the total number of rentals for each category of movies. 
 
select * from rental;                                    -- join inventory with inventory_id 
select * from inventory;                                 -- join film with film_id 
select * from film;                                      -- join film_category with film_id
select * from film_category;                             --                                                                                            
 
SELECT 

  category_id, COUNT(rental_id) AS rental_count
FROM
    rental
        JOIN
    inventory ON rental.inventory_id = inventory.inventory_id
        JOIN
    film ON film.film_id = inventory.film_id
        JOIN
    film_category ON film_category.film_id = film.film_id
GROUP BY film_category.category_id;



#Question 2: 
#Find the average rental rate of movies in each language. 

select* from film;             -- join language with language_id
select * from language;

SELECT 
    language.name, AVG(rental_rate)
FROM
    film
	JOIN
    language ON film.language_id = language.language_id where film.language_id
GROUP BY language.language_id;


#joins
#Question 3: 
#Retrieve the customer names along with the total amount they've spent on rentals. 
 

select * from customer ;                     -- join payment with customer_id
select * from payment;                       -- join rental with customer_id
select * from rental ;

SELECT 
    CONCAT(c.first_name, ' ', c.last_name) AS name,
    SUM(p.amount) AS totl_spent
FROM
    customer AS c
        JOIN
    payment AS p ON c.customer_id = p.customer_id
        JOIN
    rental AS r ON r.customer_id = p.customer_id
GROUP BY name;



#Question 4: 

#List the titles of movies rented by each customer in a particular city (e.g., 'London'). 



select * from city ;                          -- join address with city_id
select *from address;                         -- join customer with address_id
select *from customer;                        -- join rental with customer_id 
select* from rental;                          -- join inventory with inventory_id
select *from inventory;                       -- join film with film_id
select * from film;

SELECT 
    CONCAT(cx.first_name, ' ', cx.last_name) AS name,
    c.city,
    f.title
FROM
    city AS c
        JOIN
    address AS a ON c.city_id = a.city_id
        JOIN
    customer AS cx ON cx.address_id = a.address_id
        JOIN
    rental AS r ON r.customer_id = cx.customer_id
        JOIN
    inventory AS i ON i.inventory_id = r.inventory_id
        JOIN
    film AS f ON f.film_id = i.film_id
GROUP BY c.city , f.title , name;


#advance join
#Question 5: 
#Display the top 5 rented movies along with the number of times they've been rented. 
select * from rental;                   -- join inventory with inventory_id
select * from inventory ;               -- jooin film with film_id
select * from film ;                    --  
              -- 

SELECT 
    f.title, COUNT(rental_id) AS times_rented
FROM
    rental AS r
        JOIN
    inventory AS i ON r.inventory_id = i.inventory_id
        JOIN
    film AS f ON f.film_id = i.film_id
GROUP BY f.title
ORDER BY times_rented DESC
LIMIT 5;




#Question 6: 
#Determine the customers who have rented movies from both stores (store ID 1 and store ID 2). 
select * from rental ;                 -- join inventory with inventory_id
select * from inventory ;              -- join customer with store_id
select * from customer;

SELECT 
    cx.store_id AS store_c, COUNT(rental_id)
FROM
    rental AS r
        JOIN
    inventory AS i ON r.inventory_id = i.inventory_id
        JOIN
    customer AS cx ON cx.store_id = i.store_id
GROUP BY store_c;